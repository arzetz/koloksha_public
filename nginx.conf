proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=my_cache:10m inactive=60m;

server {
    listen 80;
    server_name kolasf.ru www.kolasf.ru;

    return 301 https://$host$request_uri;
}

server{
    listen 443 ssl;
    server_name kolasf.ru www.kolasf.ru;

    # Пути к сертификатам
    ssl_certificate /etc/letsencrypt/live/kolasf.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/kolasf.ru/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/kolasf.ru/chain.pem;

    # SSL параметры
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # HTTP Strict Transport Security (HSTS)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Другие безопасные заголовки
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    

location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # Включаем кэширование для корневого пути
        expires 1h;  # Устанавливаем срок жизни кэша на 1 час
        add_header Cache-Control "public, max-age=3600";  # Заголовок кэша

        location ~* \.mp4$ {
        expires 30d;  # Устанавливаем срок жизни кэша на 30 дней для MP4
        add_header Cache-Control "public, max-age=2592000";  # Заголовок кэша для MP4
    }
    }

    location /api {
        proxy_pass http://backend:8082;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;  # Для WebSocket, если требуется
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache my_cache;  # Включает кэширование
        proxy_cache_bypass $http_upgrade;  # Не кэшировать WebSocket запросы
    }
}
